{
    "openapi": "3.0.0",
    "info": {
        "title": "Hotel Wisnu API",
        "description": "API documentation for Hotel Wisnu Management System",
        "contact": {
            "name": "Hotel Wisnu API Support",
            "email": "admin@hotelwisnu.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "Hotel Wisnu API Server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Register a new user with customer role",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "full_name"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Login with email and password to get access token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Get the currently authenticated user's details",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logout the currently authenticated user by revoking their token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get all bookings (Admin only)",
                "description": "Retrieve a list of all bookings with optional filtering",
                "operationId": "getAllBookings",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter bookings by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "confirmed",
                                "checked_in",
                                "checked_out",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter bookings by start date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter bookings by end date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "booking_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "customer_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "room_id": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "check_in_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-07-15"
                                            },
                                            "check_out_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-07-20"
                                            },
                                            "total_nights": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "total_amount": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 750
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "confirmed"
                                            },
                                            "special_requests": {
                                                "type": "string",
                                                "example": "Extra pillows please"
                                            },
                                            "booking_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-06-10"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Create a new booking",
                "description": "Create a new booking with the provided data",
                "operationId": "createBooking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room_id",
                                    "check_in_date",
                                    "check_out_date"
                                ],
                                "properties": {
                                    "room_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "check_in_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-07-15"
                                    },
                                    "check_out_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-07-20"
                                    },
                                    "special_requests": {
                                        "type": "string",
                                        "example": "Extra pillows please"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking created successfully"
                                        },
                                        "booking": {
                                            "properties": {
                                                "booking_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "customer_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "room_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "check_in_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-07-15"
                                                },
                                                "check_out_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-07-20"
                                                },
                                                "total_nights": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 750
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "special_requests": {
                                                    "type": "string",
                                                    "example": "Extra pillows please"
                                                },
                                                "booking_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-06-10"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room is not available for booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/my-bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get current customer's bookings",
                "description": "Retrieve a list of bookings for the authenticated customer",
                "operationId": "getMyBookings",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter bookings by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "confirmed",
                                "checked_in",
                                "checked_out",
                                "cancelled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "booking_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "customer_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "room_id": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "check_in_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-07-15"
                                            },
                                            "check_out_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-07-20"
                                            },
                                            "total_nights": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "total_amount": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 750
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "confirmed"
                                            },
                                            "special_requests": {
                                                "type": "string",
                                                "example": "Extra pillows please"
                                            },
                                            "booking_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-06-10"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "room": {
                                                "properties": {
                                                    "room_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "room_number": {
                                                        "type": "string",
                                                        "example": "101"
                                                    },
                                                    "room_type": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bookings/{id}": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get a specific booking",
                "description": "Get detailed information about a specific booking by ID",
                "operationId": "getBookingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "booking_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "customer_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "room_id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "check_in_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-07-15"
                                        },
                                        "check_out_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-07-20"
                                        },
                                        "total_nights": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total_amount": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 750
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "confirmed"
                                        },
                                        "special_requests": {
                                            "type": "string",
                                            "example": "Extra pillows please"
                                        },
                                        "booking_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-06-10"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "room": {
                                            "properties": {
                                                "room_id": {
                                                    "type": "integer"
                                                },
                                                "room_number": {
                                                    "type": "string"
                                                },
                                                "room_type": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "reviews": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Booking] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Update a booking",
                "description": "Update a specific booking with the provided data. Customers can only update special requests or cancel their bookings.",
                "operationId": "updateBooking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "special_requests": {
                                        "type": "string",
                                        "example": "Need a baby cot"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "cancelled"
                                        ],
                                        "example": "cancelled"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking updated successfully"
                                        },
                                        "booking": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot cancel a booking that has already been checked in or out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Booking] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Delete a booking",
                "description": "Delete a specific booking by ID. Only pending or cancelled bookings can be deleted.",
                "operationId": "deleteBooking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Only pending or cancelled bookings can be deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Booking] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/booking-services": {
            "get": {
                "tags": [
                    "Booking Services"
                ],
                "summary": "Get all booking services (Admin only)",
                "description": "Retrieve a list of all booking services with optional filtering",
                "operationId": "getAllBookingServices",
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "Filter by booking ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "query",
                        "description": "Filter by service ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "requested",
                                "confirmed",
                                "completed",
                                "cancelled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "booking_service_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "booking_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "service_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "quantity": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "unit_price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 50
                                            },
                                            "total_price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 100
                                            },
                                            "service_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-07-16"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "confirmed"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "booking": {
                                                "type": "object"
                                            },
                                            "service": {
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Booking Services"
                ],
                "summary": "Add a service to a booking",
                "description": "Add a service to an existing booking",
                "operationId": "addBookingService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "booking_id",
                                    "service_id",
                                    "quantity",
                                    "service_date"
                                ],
                                "properties": {
                                    "booking_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "service_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-07-16"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service added to booking successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service added to booking successfully"
                                        },
                                        "booking_service": {
                                            "properties": {
                                                "booking_service_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "booking_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "service_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "unit_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                },
                                                "total_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "service_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-07-16"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "requested"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service is not available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/booking-services/{id}": {
            "get": {
                "tags": [
                    "Booking Services"
                ],
                "summary": "Get a specific booking service",
                "description": "Get detailed information about a specific booking service by ID",
                "operationId": "getBookingServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "booking_service_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "booking_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "service_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "unit_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50
                                        },
                                        "total_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100
                                        },
                                        "service_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-07-16"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "confirmed"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "booking": {
                                            "type": "object"
                                        },
                                        "service": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\BookingService] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Booking Services"
                ],
                "summary": "Update a booking service",
                "description": "Update a specific booking service with the provided data. Customers can only update quantity or cancel.",
                "operationId": "updateBookingService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "cancelled"
                                        ],
                                        "example": "cancelled"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking service updated successfully"
                                        },
                                        "booking_service": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot update service that has been completed or cancelled"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\BookingService] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Booking Services"
                ],
                "summary": "Delete a booking service",
                "description": "Delete a specific booking service by ID. Cannot delete completed services.",
                "operationId": "deleteBookingService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete a service that has been completed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\BookingService] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/bookings": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get booking summary report",
                "description": "Get summary of bookings with daily booking counts and revenue",
                "operationId": "getBookingSummary",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_bookings": {
                                            "type": "integer",
                                            "example": 120
                                        },
                                        "total_revenue": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 45000
                                        },
                                        "average_daily_bookings": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4
                                        },
                                        "average_daily_revenue": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1500
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-01-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-12-31"
                                        },
                                        "daily_data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2023-01-01"
                                                    },
                                                    "total_bookings": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "total_revenue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1500
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. This action requires admin privileges."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/occupancy": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get room occupancy report",
                "description": "Get report on room occupancy rates over a specified period",
                "operationId": "getRoomOccupancy",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room occupancy report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_rooms": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "average_occupancy_rate": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 65.75
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-01-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-12-31"
                                        },
                                        "daily_data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2023-01-01"
                                                    },
                                                    "occupied_rooms": {
                                                        "type": "integer",
                                                        "example": 32
                                                    },
                                                    "occupancy_rate": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 64
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. This action requires admin privileges."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/revenue-by-room-type": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get revenue by room type report",
                "description": "Get report on revenue breakdown by room type",
                "operationId": "getRevenueByRoomType",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Revenue by room type report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-01-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-12-31"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type_name": {
                                                        "type": "string",
                                                        "example": "Deluxe Room"
                                                    },
                                                    "total_bookings": {
                                                        "type": "integer",
                                                        "example": 45
                                                    },
                                                    "total_revenue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 22500
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. This action requires admin privileges."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/service-usage": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get service usage report",
                "description": "Get report on service usage and revenue",
                "operationId": "getServiceUsage",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service usage report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-01-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-12-31"
                                        },
                                        "total_services_revenue": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 15000
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "service_name": {
                                                        "type": "string",
                                                        "example": "Room Cleaning"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "other"
                                                    },
                                                    "usage_count": {
                                                        "type": "integer",
                                                        "example": 120
                                                    },
                                                    "total_quantity": {
                                                        "type": "integer",
                                                        "example": 120
                                                    },
                                                    "total_revenue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 6000
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. This action requires admin privileges."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/customer-statistics": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get customer statistics report",
                "description": "Get report on customer statistics including top customers and new customer count",
                "operationId": "getCustomerStatistics",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer statistics report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-01-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-12-31"
                                        },
                                        "new_customers": {
                                            "type": "integer",
                                            "example": 25
                                        },
                                        "top_customers_by_bookings": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "full_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "john@example.com"
                                                    },
                                                    "booking_count": {
                                                        "type": "integer",
                                                        "example": 8
                                                    },
                                                    "total_spent": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 4500
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "top_customers_by_revenue": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "full_name": {
                                                        "type": "string",
                                                        "example": "Jane Smith"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "jane@example.com"
                                                    },
                                                    "booking_count": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "total_spent": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 6000
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. This action requires admin privileges."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/dashboard": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get dashboard summary",
                "description": "Get summary of key metrics for the dashboard",
                "operationId": "getDashboardSummary",
                "responses": {
                    "200": {
                        "description": "Dashboard summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "today": {
                                            "properties": {
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-06-03"
                                                },
                                                "bookings": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "revenue": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1500
                                                },
                                                "check_ins": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "check_outs": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "monthly": {
                                            "properties": {
                                                "month": {
                                                    "type": "string",
                                                    "example": "June 2023"
                                                },
                                                "bookings": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "revenue": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45000
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "rooms": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "available": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "occupied": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "reserved": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "maintenance": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "occupancy_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 56
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "upcoming_bookings": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. This action requires admin privileges."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/export": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Export report data",
                "description": "Export report data in different formats (JSON, CSV)",
                "operationId": "exportReport",
                "parameters": [
                    {
                        "name": "report_type",
                        "in": "query",
                        "description": "Type of report to export",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "bookings",
                                "occupancy",
                                "revenue-by-room-type",
                                "service-usage",
                                "customer-statistics"
                            ],
                            "example": "bookings"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "csv"
                            ],
                            "example": "csv"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for the report (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report data exported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid report type"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. This action requires admin privileges."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/yearly-financial": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get yearly financial report",
                "description": "Get yearly financial report with monthly breakdown",
                "operationId": "getYearlyFinancialReport",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year for the report (YYYY)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2023
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Yearly financial report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "year": {
                                            "type": "integer",
                                            "example": 2023
                                        },
                                        "total_revenue": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 120000
                                        },
                                        "total_bookings": {
                                            "type": "integer",
                                            "example": 450
                                        },
                                        "average_booking_value": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 266.67
                                        },
                                        "monthly_data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "month": {
                                                        "type": "string",
                                                        "example": "January"
                                                    },
                                                    "bookings": {
                                                        "type": "integer",
                                                        "example": 35
                                                    },
                                                    "room_revenue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 8500
                                                    },
                                                    "service_revenue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1500
                                                    },
                                                    "total_revenue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10000
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. This action requires admin privileges."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all reviews",
                "description": "Retrieve a list of all reviews with optional filtering (Admin only)",
                "operationId": "getAllReviews",
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "Filter reviews by booking ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "customer_id",
                        "in": "query",
                        "description": "Filter reviews by customer ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Filter reviews by rating",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 5,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "review_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "customer_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "booking_id": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "rating": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "comment": {
                                                "type": "string",
                                                "example": "Excellent service and amenities!"
                                            },
                                            "review_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2023-07-25"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "customer": {
                                                "type": "object"
                                            },
                                            "booking": {
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new review",
                "description": "Create a new review for a completed booking",
                "operationId": "createReview",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "booking_id",
                                    "rating"
                                ],
                                "properties": {
                                    "booking_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Excellent service and amenities!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review created successfully"
                                        },
                                        "review": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Can only review bookings that have been checked out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reviews/{id}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get a specific review",
                "description": "Get detailed information about a specific review by ID",
                "operationId": "getReviewById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "review_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "customer_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "booking_id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "rating": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "comment": {
                                            "type": "string",
                                            "example": "Excellent service and amenities!"
                                        },
                                        "review_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-07-25"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "customer": {
                                            "type": "object"
                                        },
                                        "booking": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Review] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update a review",
                "description": "Update a specific review with the provided data",
                "operationId": "updateReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 4
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Very good service, but could be better."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review updated successfully"
                                        },
                                        "review": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Review] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "description": "Delete a specific review by ID",
                "operationId": "deleteReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Review] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rooms": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Get all rooms",
                "description": "Retrieve a list of all rooms with optional filtering",
                "operationId": "getRooms",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter rooms by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "available",
                                "occupied",
                                "maintenance",
                                "reserved"
                            ]
                        }
                    },
                    {
                        "name": "room_type_id",
                        "in": "query",
                        "description": "Filter rooms by room type ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "room_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "room_number": {
                                                "type": "string",
                                                "example": "101"
                                            },
                                            "room_type_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "available"
                                            },
                                            "floor": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "room_type": {
                                                "properties": {
                                                    "room_type_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "type_name": {
                                                        "type": "string",
                                                        "example": "Deluxe Room"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Create a new room",
                "description": "Create a new room with the provided data",
                "operationId": "storeRoom",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room_number",
                                    "room_type_id",
                                    "status",
                                    "floor"
                                ],
                                "properties": {
                                    "room_number": {
                                        "type": "string",
                                        "example": "101"
                                    },
                                    "room_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "occupied",
                                            "maintenance",
                                            "reserved"
                                        ],
                                        "example": "available"
                                    },
                                    "floor": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Room created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room created successfully"
                                        },
                                        "room": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rooms/{id}": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Get a specific room",
                "description": "Get detailed information about a specific room by ID",
                "operationId": "getRoomById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "room_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "room_number": {
                                            "type": "string",
                                            "example": "101"
                                        },
                                        "room_type_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "available"
                                        },
                                        "floor": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "room_type": {
                                            "properties": {
                                                "room_type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type_name": {
                                                    "type": "string",
                                                    "example": "Deluxe Room"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Spacious room with king size bed"
                                                },
                                                "base_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1500
                                                },
                                                "max_occupancy": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "amenities": {
                                                    "type": "string",
                                                    "example": "WiFi, TV, Mini Bar"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Room] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Update a room",
                "description": "Update a specific room with the provided data",
                "operationId": "updateRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "room_number": {
                                        "type": "string",
                                        "example": "102"
                                    },
                                    "room_type_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "occupied",
                                            "maintenance",
                                            "reserved"
                                        ],
                                        "example": "maintenance"
                                    },
                                    "floor": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room updated successfully"
                                        },
                                        "room": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Room] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Delete a room",
                "description": "Delete a specific room by ID",
                "operationId": "deleteRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete room",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete room because it has bookings associated with it"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Room] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/room-types": {
            "get": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Get all room types",
                "description": "Retrieve a list of all room types",
                "operationId": "getRoomTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "room_type_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "type_name": {
                                                "type": "string",
                                                "example": "Deluxe Room"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Spacious room with king size bed"
                                            },
                                            "base_price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 1500
                                            },
                                            "max_occupancy": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "amenities": {
                                                "type": "string",
                                                "example": "WiFi, TV, Mini Bar"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Create a new room type",
                "description": "Create a new room type with the provided data",
                "operationId": "storeRoomType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type_name",
                                    "description",
                                    "base_price",
                                    "max_occupancy",
                                    "amenities"
                                ],
                                "properties": {
                                    "type_name": {
                                        "type": "string",
                                        "example": "Deluxe Room"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Spacious room with king size bed"
                                    },
                                    "base_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1500
                                    },
                                    "max_occupancy": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "amenities": {
                                        "type": "string",
                                        "example": "WiFi, TV, Mini Bar"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Room type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room type created successfully"
                                        },
                                        "room_type": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/room-types/{id}": {
            "get": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Get a specific room type",
                "description": "Get detailed information about a specific room type by ID",
                "operationId": "getRoomTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "room_type_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "type_name": {
                                            "type": "string",
                                            "example": "Deluxe Room"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Spacious room with king size bed"
                                        },
                                        "base_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1500
                                        },
                                        "max_occupancy": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "amenities": {
                                            "type": "string",
                                            "example": "WiFi, TV, Mini Bar"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "rooms": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\RoomType] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Update a room type",
                "description": "Update a specific room type with the provided data",
                "operationId": "updateRoomType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type_name": {
                                        "type": "string",
                                        "example": "Deluxe Suite"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Luxurious suite with king size bed and jacuzzi"
                                    },
                                    "base_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2000
                                    },
                                    "max_occupancy": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "amenities": {
                                        "type": "string",
                                        "example": "WiFi, TV, Mini Bar, Jacuzzi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room type updated successfully"
                                        },
                                        "room_type": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\RoomType] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Delete a room type",
                "description": "Delete a specific room type by ID",
                "operationId": "deleteRoomType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete room type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete room type because it has rooms associated with it"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\RoomType] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all services",
                "description": "Retrieve a list of all active services with optional filtering",
                "operationId": "getServices",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter services by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "food",
                                "laundry",
                                "spa",
                                "transport",
                                "other"
                            ]
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter services by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "service_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "service_name": {
                                                "type": "string",
                                                "example": "Room Cleaning"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Standard room cleaning service"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 50
                                            },
                                            "category": {
                                                "type": "string",
                                                "example": "other"
                                            },
                                            "is_active": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "description": "Create a new service with the provided data",
                "operationId": "storeService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_name",
                                    "description",
                                    "price",
                                    "category"
                                ],
                                "properties": {
                                    "service_name": {
                                        "type": "string",
                                        "example": "Room Cleaning"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Standard room cleaning service"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "food",
                                            "laundry",
                                            "spa",
                                            "transport",
                                            "other"
                                        ],
                                        "example": "other"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service created successfully"
                                        },
                                        "service": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a specific service",
                "description": "Get detailed information about a specific service by ID",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "service_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "service_name": {
                                            "type": "string",
                                            "example": "Room Cleaning"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Standard room cleaning service"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50
                                        },
                                        "category": {
                                            "type": "string",
                                            "example": "other"
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "description": "Update a specific service with the provided data",
                "operationId": "updateService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_name": {
                                        "type": "string",
                                        "example": "Premium Room Cleaning"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Premium room cleaning service with additional amenities"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 75
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "food",
                                            "laundry",
                                            "spa",
                                            "transport",
                                            "other"
                                        ],
                                        "example": "other"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service updated successfully"
                                        },
                                        "service": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Service] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "description": "Delete a specific service by ID",
                "operationId": "deleteService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete service because it is used in bookings"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Service] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users (Admin only)",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "username": {
                                                "type": "string",
                                                "example": "johndoe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "full_name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "1234567890"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Main St"
                                            },
                                            "role": {
                                                "type": "string",
                                                "example": "customer"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Create a new user with the provided data (Admin only)",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "full_name",
                                    "role"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "customer"
                                        ],
                                        "example": "customer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user",
                "description": "Get detailed information about a specific user by ID (Admin only)",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "johndoe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john@example.com"
                                        },
                                        "full_name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "1234567890"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "customer"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\User] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Update a specific user with the provided data (Admin only)",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe_updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john_updated@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "456 New St"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "customer"
                                        ],
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\User] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Delete a specific user by ID (Admin only)",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\User] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API endpoints for user authentication"
        },
        {
            "name": "Users",
            "description": "API endpoints for user management"
        },
        {
            "name": "Room Types",
            "description": "API endpoints for room type management"
        },
        {
            "name": "Rooms",
            "description": "API endpoints for room management"
        },
        {
            "name": "Bookings",
            "description": "API endpoints for booking management"
        },
        {
            "name": "Services",
            "description": "API endpoints for service management"
        },
        {
            "name": "Booking Services",
            "description": "API endpoints for booking service management"
        },
        {
            "name": "Reviews",
            "description": "API endpoints for review management"
        },
        {
            "name": "Reports",
            "description": "API endpoints for reports and analytics"
        }
    ]
}